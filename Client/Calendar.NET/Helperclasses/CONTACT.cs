/*
 * Swagger Appointment managment - RTM - OpenAPI 3.1
 *
 * This is the OpenAPI 3.1 specification of Appointment managment - RTM.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: mehmet-ali.asar@protonmail.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;

using System.Runtime.Serialization;
using Newtonsoft.Json;


namespace Calendar.NET
{ 
    /// <summary>
    /// 
    /// </summary>
    
    public class CONTACT
    {
        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        
        public long ContactID { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        
        public int PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets Street
        /// </summary>
        
        public string Street { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Note
        /// </summary>
        
        public string Note { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets ContactType
        /// </summary>
        
        public int ContactType { get; set; }

        /// <summary>
        /// Gets or Sets Telephone
        /// </summary>
        
        public long Telephone { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        
        public string Company { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append(" CONTACT \n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  Street: ").Append(Street).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Note: ").Append(Note).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            if (ContactType == 0)
            {
                sb.Append("  ContactType: ").Append("privat").Append("\n");
            }
            else
            {
                sb.Append("  ContactType: ").Append("Geschäftlich").Append("\n");
            }
            sb.Append("  Telephone: ").Append(Telephone).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        
        

        
        

        
        

        
    }
}
