/*
 * Swagger Appointment managment - RTM - OpenAPI 3.1
 *
 * This is the OpenAPI 3.0 specification of Appointment managment - RTM.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: mehmet-ali.asar@protonmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AppointmentManagement.Client.Client;
using AppointmentManagement.Client.Api;
// uncomment below to import models
//using AppointmentManagement.Client.Model;

namespace AppointmentManagement.Client.Test.Api
{
    /// <summary>
    ///  Class for testing CONTACTApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CONTACTApiTests : IDisposable
    {
        private CONTACTApi instance;

        public CONTACTApiTests()
        {
            instance = new CONTACTApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CONTACTApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CONTACTApi
            //Assert.IsType<CONTACTApi>(instance);
        }

        /// <summary>
        /// Test CreateContact
        /// </summary>
        [Fact]
        public void CreateContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CONTACT CONTACT = null;
            //instance.CreateContact(CONTACT);
        }

        /// <summary>
        /// Test DeleteContact
        /// </summary>
        [Fact]
        public void DeleteContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object contactID = null;
            //instance.DeleteContact(contactID);
        }

        /// <summary>
        /// Test GetContact
        /// </summary>
        [Fact]
        public void GetContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object contactID = null;
            //instance.GetContact(contactID);
        }

        /// <summary>
        /// Test GetContacts
        /// </summary>
        [Fact]
        public void GetContactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetContacts();
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ReplaceContact
        /// </summary>
        [Fact]
        public void ReplaceContactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object contactID = null;
            //CONTACT CONTACT = null;
            //instance.ReplaceContact(contactID, CONTACT);
        }
    }
}
