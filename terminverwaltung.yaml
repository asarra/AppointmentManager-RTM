openapi: 3.1.0

info:
  title: Swagger Terminverwaltung-RTM - OpenAPI 3.1
  description: |-
    Das ist der auf OpenAPI 3.0-Spezifikation basierende Server von Terminverwaltung-RTM.
  contact:
    email: mehmet-ali.asar@protonmail.com
  version: "0.1"

externalDocs:
  description: Find out more about the project
  url: https://github.com/asarra/Terminverwaltung-RTM

servers:
  - url: http://localhost:3001/api/v3

tags:
  - name: KONTAKT
    description: Verwalte deine Kontakte
  - name: TERMIN
    description: Verwalte deine Termine



paths:
  /contacts:
    get:  # get and delete do not get a requestBody
      tags:
        - KONTAKT
      operationId: getContacts
      summary: Get all contacts
      description: Get all contacts as JSON
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KONTAKT'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        #- api_key: []
        - terminverwaltung_auth:
            - write:contacts
            - read:contacts

    post:
      tags:
        - KONTAKT
      operationId: createContact
      summary: Create a new contact
      description: Create a new contact by Id
      requestBody:
        $ref: '#/components/requestBodies/ContactBody'
      responses:
        '200':
          $ref: '#/components/responses/ContactResponse'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        - terminverwaltung_auth:
            - write:contacts
            - read:contacts

  /contacts/{KontaktID}:
    parameters:
      - $ref: '#/components/parameters/KontaktID'
    get:
      tags:
        - KONTAKT
      operationId: getContact
      summary: Get a single contact
      description: Get a single contact by Id
      responses:
        '200':
          $ref: '#/components/responses/ContactResponse'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        #- api_key: []
        - terminverwaltung_auth:
            - write:contacts
            - read:contacts

    put:
      tags:
        - KONTAKT
      operationId: replaceContact
      summary: Replace a single contact
      description: Replace a single contact by Id
      requestBody:
        $ref: '#/components/requestBodies/ContactBody'
      responses:
        '200':
          $ref: '#/components/responses/ContactResponse'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        - terminverwaltung_auth:
            - write:contacts
            - read:contacts

    delete:
      tags:
        - KONTAKT
      operationId: deleteContact
      summary: Delete a single contact
      description: Delete a single contact by Id
      responses:
        '204':
          description: Deleted the contact
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        - terminverwaltung_auth:
            - write:contacts
            - read:contacts

  /appointments:
    get:
      tags:
        - TERMIN
      operationId: getAppointments
      summary: Get all appointments
      description: Get all appointments as JSON
      responses:
        '200':
          description: Success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TERMIN'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TERMIN'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        #- api_key: []
        - terminverwaltung_auth:
            - write:appointments
            - read:appointments

    post:
      tags:
        - TERMIN
      operationId: createAppointment
      summary: Create a new appointment
      description: Create a new appointment by Id
      requestBody:
        $ref: '#/components/requestBodies/AppointmentBody'
      responses:
        '200':
          $ref: '#/components/responses/AppointmentResponse'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        - terminverwaltung_auth:
            - write:appointments
            - read:appointments

  /appointments/{TerminID}:
    parameters:
      - $ref: '#/components/parameters/TerminID'
    get:
      tags:
        - TERMIN
      operationId: getAppointment
      summary: Get a single appointment
      description: Get a single appointment by Id
      responses:
        '200':
          $ref: '#/components/responses/AppointmentResponse'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        #- api_key: []
        - terminverwaltung_auth:
            - write:appointments
            - read:appointments

    put:
      tags:
        - TERMIN
      operationId: replaceAppointment
      summary: Replace a single appointment
      description: Replace a single appointment by Id
      requestBody:
        $ref: '#/components/requestBodies/AppointmentBody'
      responses:
        '200':
          $ref: '#/components/responses/AppointmentResponse'
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        - terminverwaltung_auth:
            - write:appointments
            - read:appointments

    delete:
      tags:
        - TERMIN
      operationId: deleteAppointment
      summary: Delete a single appointment
      description: Delete a single appointment by Id
      responses:
        '204':
          description: Deleted the appointment
        default:
          $ref: '#/components/responses/CollectAllErrorsResponse'
      security:
        - terminverwaltung_auth:
            - write:appointments
            - read:appointments



components:
  parameters:
    KontaktID:
      in: path
      name: KontaktID
      required: true
      schema:
        type: integer
        minimum: 0
    TerminID:
      in: path
      name: TerminID
      required: true
      schema:
        type: integer
        minimum: 0

  responses:
    CollectAllErrorsResponse: # catches everything that is not '200' and in delete cases '204'
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ContactResponse:
      description: Success
      content: 
        application/json:
          schema:
              $ref: '#/components/schemas/KONTAKT'
    AppointmentResponse:
      description: Success
      content: 
        application/json:
          schema:
              $ref: '#/components/schemas/KONTAKT'

  schemas:
    KONTAKT:
      type: object
      required:
        - KontaktID
        - Name
        - PLZ
        - Strasse
        - Ort
        - Email
        - Kontaktart
        - Telefon
        - Firma
      properties:
        KontaktID:
          type: integer
          format: int64
        Name:
          type: string
          description: "Name des Kontaktes"
        PLZ:
          type: integer
          format: int32
        Strasse:
          type: string
          maxLength: 50
        Ort:
          type: string
          maxLength: 50
        Bemerkung:
          type: string
        Email:
          type: string
        Kontaktart:
          type: integer
          format: int32
        Telefon:
          type: integer
          format: int64
        Firma:
          type: string
          maxLength: 50
      xml:
        name: KONTAKT
    TERMIN:
      type: object
      required:
        - TerminID
        - KontaktID
        - Wiederholung
        - Thema
        - Startzeit
        - Ort
      properties:
        TerminID:
          type: integer
          format: int64
        KontaktID:
          type: integer
          format: int64
        Wiederholung:
          type: integer
          format: int32
        Thema:
          type: string
        Bemerkung:
          type: string
        Startzeit:
          type: string
          format: date-time
        Endzeit:
          type: string
          format: date-time
        Ort:
          type: string
          maxLength: 50
      xml:
        name: TERMIN
    ERINNERUNG:
      type: object
      required:
        - ErinnerID
        - TerminID
        - Zeitpunkt
      properties:
        ErinnerID:
          type: integer
          format: int64
        TerminID:
          type: integer
          format: int64
        Zeitpunkt:
          type: string
          format: date-time
      xml:
        name: ERINNERUNG
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  requestBodies:
    ContactBody:
      content: 
        application/json: 
          schema: 
            $ref: '#/components/schemas/KONTAKT'
      required: true
    AppointmentBody:
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/TERMIN'
        required: true

  securitySchemes:
    terminverwaltung_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://localhost:3001/oauth/authorize
          scopes:
            write:contacts: modify contacts
            read:contacts: read contacts          
            write:appointments: modify appointments
            read:appointments: read appointments
    #api_key:
    #  type: apiKey
    #  name: api_key
    #  in: header

#xTermin (also x Erinnerung)
#
# https://apidog.com/articles/postman-vs-swagger/